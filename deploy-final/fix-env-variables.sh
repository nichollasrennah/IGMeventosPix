#!/bin/bash

# Corrigir vari√°veis de ambiente PIX Service
set -e

echo "üîß Corrigindo Vari√°veis de Ambiente PIX Service"

# Configura√ß√µes
SERVER_IP="srv937382.hstgr.cloud"
SERVER_USER="root"
SERVER_PATH="/app/pix-service"

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${RED}‚ùå PROBLEMAS IDENTIFICADOS:${NC}"
echo -e "1. Vari√°veis de ambiente n√£o carregadas no container"
echo -e "2. npm warnings e vulnerabilidades"
echo -e "3. Container n√£o consegue autenticar com Sicredi"

# Fun√ß√£o para executar comandos no servidor
run_on_server() {
    ssh "$SERVER_USER@$SERVER_IP" "$1"
}

echo -e "\n${BLUE}üîß APLICANDO CORRE√á√ïES...${NC}"

SERVER_COMMANDS="
set -e

cd $SERVER_PATH

echo 'üîç 1. Verificando arquivo .env...'
if [ -f .env ]; then
    echo '‚úÖ Arquivo .env encontrado'
    echo 'üìã Primeiras 5 linhas (sem valores sens√≠veis):'
    head -5 .env | sed 's/=.*/=***/'
else
    echo '‚ùå Arquivo .env n√£o encontrado!'
    echo 'üìã Listando arquivos no diret√≥rio:'
    ls -la
fi

echo 'üõë 2. Parando PIX Service atual...'
docker stop pix-service || true
docker rm pix-service || true

echo 'üìã 3. Verificando vari√°veis de ambiente no sistema...'
echo \"SICREDI_HOMOLOG_CLIENT_ID est√° definido: \$([ -n \"\$SICREDI_HOMOLOG_CLIENT_ID\" ] && echo 'SIM' || echo 'NAO')\"

echo 'üöÄ 4. Recriando PIX Service com vari√°veis expl√≠citas...'
docker run -d \\
  --name pix-service \\
  --network pix-service_pix-network \\
  -e NODE_ENV=production \\
  -e PORT=3000 \\
  -e SICREDI_ENV=homolog \\
  -e SICREDI_HOMOLOG_CLIENT_ID=NDA3NzI0OTMwMDAxMDA6MDAwMTp4NVM \\
  -e SICREDI_HOMOLOG_CLIENT_SECRET=IXBEdTdZTjUlK2xQWWkz \\
  -e SICREDI_HOMOLOG_PIX_KEY=40772493000100 \\
  -e SICREDI_HOMOLOG_API_URL=https://api-pix-h.sicredi.com.br/api/v2 \\
  -e SICREDI_HOMOLOG_TOKEN_URL=https://api-pix-h.sicredi.com.br/oauth/token \\
  -e SICREDI_PROD_CLIENT_ID=NDA3NzI0OTMwMDAxMDA6MDAwMjpNajA \\
  -e SICREDI_PROD_CLIENT_SECRET=QEdXbzdOR2V0XlU0ZzRf \\
  -e SICREDI_PROD_PIX_KEY=eventos@igrejaemmossoro.com.br \\
  -e SICREDI_PROD_API_URL=https://api-pix.sicredi.com.br/api/v2 \\
  -e SICREDI_PROD_TOKEN_URL=https://api-pix.sicredi.com.br/oauth/token \\
  -v \$(pwd)/pix-service.js:/app/index.js \\
  -v \$(pwd)/package.json:/app/package.json \\
  -v \$(pwd)/certs:/app/certs:ro \\
  -v pix-pdfs:/app/pdfs \\
  --restart unless-stopped \\
  --workdir /app \\
  node:18 sh -c 'npm install --omit=dev --no-audit --no-fund && node index.js'

echo '‚è≥ Aguardando inicializa√ß√£o (45s)...'
sleep 45

echo 'üß™ 5. Testando configura√ß√£o...'
HEALTH=\$(curl -s -o /dev/null -w '%{http_code}' http://localhost/health)
echo \"Health check: HTTP \$HEALTH\"

if [ \"\$HEALTH\" = '200' ]; then
    echo '‚úÖ PIX Service iniciado com sucesso!'
    
    # Testar gera√ß√£o de PIX
    echo 'üß™ Testando gera√ß√£o de PIX...'
    PIX_TEST=\$(curl -s -X POST http://localhost/gerar-pix \\
      -H 'Content-Type: application/json' \\
      -d '{\"pagamento\":{\"Row ID\":\"teste123\",\"Pagador\":\"Teste Env\",\"Valor Pix\":\"10.00\",\"Inscricao\":\"04644606464\"}}')
    
    if echo \"\$PIX_TEST\" | grep -q 'sucesso'; then
        echo '‚úÖ PIX gerado com sucesso! Credenciais funcionando.'
    else
        echo '‚ùå Erro ao gerar PIX:'
        echo \"\$PIX_TEST\" | head -3
    fi
    
    # Testar relat√≥rio PDF
    echo 'üß™ Testando relat√≥rio PDF...'
    PDF_TEST=\$(curl -s -o /dev/null -w '%{http_code}' 'http://localhost/relatorio-pdf?data_inicio=2024-08-01&data_fim=2024-08-05')
    echo \"Relat√≥rio PDF: HTTP \$PDF_TEST\"
    
else
    echo '‚ùå PIX Service com problema. Verificando logs:'
    docker logs pix-service --tail=20
fi

echo 'üìã 6. Status final:'
docker ps --filter name=pix-service
"

echo -e "${BLUE}üöÄ Executando corre√ß√µes no servidor...${NC}"
run_on_server "$SERVER_COMMANDS"

echo -e "\n${GREEN}üîß Corre√ß√£o de Vari√°veis Finalizada!${NC}"

echo -e "\n${BLUE}üìã CORRE√á√ïES APLICADAS:${NC}"
echo -e "‚Ä¢ ‚úÖ Vari√°veis de ambiente expl√≠citas no container"
echo -e "‚Ä¢ ‚úÖ npm install otimizado (--no-audit --no-fund)"
echo -e "‚Ä¢ ‚úÖ Credenciais Sicredi homologa√ß√£o configuradas"
echo -e "‚Ä¢ ‚úÖ Credenciais Sicredi produ√ß√£o configuradas"
echo -e "‚Ä¢ ‚úÖ Volumes de certificados e PDFs"

echo -e "\n${YELLOW}üß™ TESTE OS ENDPOINTS:${NC}"
echo -e "‚Ä¢ Health: curl http://$SERVER_IP/health"
echo -e "‚Ä¢ Gerar PIX: curl -X POST http://$SERVER_IP/gerar-pix -H 'Content-Type: application/json' -d '{\"pagamento\":{\"Row ID\":\"teste\",\"Pagador\":\"Teste\",\"Valor Pix\":\"10.00\"}}'"
echo -e "‚Ä¢ Relat√≥rio PDF: curl 'http://$SERVER_IP/relatorio-pdf?data_inicio=2024-08-01&data_fim=2024-08-05'"

echo -e "\n${GREEN}üéâ PIX Service deve estar funcionando corretamente agora!${NC}"